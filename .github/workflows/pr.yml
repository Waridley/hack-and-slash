name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rs/target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@beta
        with:
          targets:
            wasm32-unknown-unknown,
            x86_64-pc-windows-gnu,
            x86_64-apple-darwin,
            aarch64-linux-android,
            aarch64-apple-ios,
          components:
            clippy,
            rustfmt,


      - name: Prepare crate for beta toolchain
        run: |
          rm ./rs/.cargo/config.toml
          rm ./rs/rust-toolchain.toml

      - name: Build
        working-directory: ./rs
        run: cargo build --features="testing"

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rs/target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@beta
        with:
          targets: wasm32-unknown-unknown, x86_64-pc-windows-gnu

      - name: Prepare crate for beta toolchain
        run: |
          rm ./rs/.cargo/config.toml
          rm ./rs/rust-toolchain.toml

      - name: Run tests
        working-directory: ./rs
        run: cargo test --no-default-features --features="testing"

  static_checks:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ./rs/target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@beta
        with:
          targets:
            wasm32-unknown-unknown,
            x86_64-pc-windows-gnu,
            x86_64-apple-darwin,
            aarch64-linux-android,
            aarch64-apple-ios,
          components: rustfmt, clippy

      - name: Prepare crate for beta toolchain
        run: |
          rm ./rs/.cargo/config.toml
          rm ./rs/rust-toolchain.toml

# Checks ALL crates in project, not just workspace
#      - name: Rustfmt
#        working-directory: ./rs
#        run: cargo fmt --all -- --check

      - name: Clippy
        working-directory: ./rs
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings
