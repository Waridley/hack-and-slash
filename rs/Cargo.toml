[package]
name = "sond-has"
version = "0.1.0"
edition = "2021"
license = "EUPL-1.2"
default-run = "sond-has"

[workspace]
resolver = "2"
members = ["tools/*", "game-dylib", "engine", "engine-dylib", "engine/macros"]

[features]
dylib = ["bevy_dylib", "sond-has-engine-dylib"]
debugging = ["engine/debugging", "bevy-inspector-egui", "egui_plot"]
vis_test = ["testing", "render", "engine/vis_test"]
testing = ["engine/testing"]
render = ["engine/render"]
default = [
    "render",
]

[workspace.dependencies.bevy]
version = "0.12.1"
default-features = false
features = [
#    "asset_processor", # only on desktop
    "animation",
    "bevy_asset",
#    "bevy_audio", # using kira
    "bevy_gilrs",
    "bevy_scene",
#    "bevy_winit", # not in CI
    "bevy_core_pipeline",
    "bevy_pbr",
    "bevy_gltf",
#    "bevy_render", # not in CI
    "bevy_sprite",
    "bevy_text",
#    "bevy_ui", # Will be making my own game UI
    "multi-threaded",
    "png",
    "hdr",
    "ktx2",
    "zstd",
    "vorbis",
    "x11",
#    "file_watcher", # only for development
    "bevy_gizmos",
    "android_shared_stdcxx",
    "tonemapping_luts",
#    "default_font", # For editor, but probably not in-game
    "webgl2", # Needed so it doesn't default to WebGPU
]

[workspace.dependencies]
# Mine
engine = { package = "sond-has-engine", path = "engine" }
enum_components = { package = "sond-bevy-enum-components", path = "../sond-bevy-enum-components" }
particles = { package = "sond-bevy-particles", path = "../sond-bevy-particles" }
macros = { package = "sond-has-macros", path = "engine/macros" }

# Engine
bevy_dylib = "0.12.1"
bevy_rapier3d = { version = "0.23.0", default-features = false, features = ["dim3"] }
rapier3d = { version = "0.17.2", features = ["wasm-bindgen", "serde-serialize"] }
bevy_kira_audio = "0.18.0"
leafwing-input-manager = "0.11.1"
bevy_quickmenu = "0.2.0"
bevy_common_assets = { version = "0.8.0", features = ["ron"] }

# UI
dioxus = {  version = "0.4.3", default-features = false, features = ["macro"] }

# Util
array-init = "2.1.0"
base64 = "0.21.7"
bevy_pkv = "0.9.0" # settings
bytemuck = "1.14.1" # mostly for seeds
crossbeam = "0.8.2"
fixedbitset = "0.4.2" # navigation graph edge storage
futures-lite = "2.1.0" # especially for `yield_now()`
bimap = "0.6.3"
nanorand = { version = "0.7.0", default-features = false, features = ["std", "wyrand", "getrandom"] } # wasm is broken without std and getrandom
noise = "0.8.2"
num-traits = "0.2.17"
ordered-float = "4.2.0"
rand = "0.8.5"
rand_xorshift = "0.3.0"
ron = "0.8.1"
static_assertions = "1.1.0"
serde = "1"
web-time = "1.0.0"

# Debugging/Editor
bevy-inspector-egui = "0.21.0"
egui_plot = "0.23"

# Testing
linkme = "0.3.22"

[dependencies]
# Mine
engine = { workspace = true }
enum_components = { workspace = true }
particles = { workspace = true }

# Engine
bevy = { workspace = true }
bevy_rapier3d = { workspace = true }
rapier3d = { workspace = true }
bevy_kira_audio = { workspace = true }
leafwing-input-manager = { workspace = true }
bevy_common_assets = { workspace = true }

# Util
bevy_pkv = { workspace = true }
nanorand = { workspace = true }
rand = { workspace = true }
rand_xorshift = { workspace = true }
serde = { workspace = true }

# Debugging
bevy-inspector-egui = { workspace = true, optional = true }
egui_plot = { workspace = true, optional = true }

[target.'cfg(not(target_arch="wasm32"))'.dependencies]
bevy_dylib = { workspace = true, optional = true }
sond-has-engine-dylib = { path = "engine-dylib", optional = true }

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[profile.release]
opt-level = "z"
lto = "thin"
strip = true

[lints.clippy]
needless_update = "allow" # `..default()` used a lot to allow quick adding/removing of fields
too_many_arguments = "allow" # Systems often need lots of arguments
type_complexity = "allow" # Queries seem complex to Clippy but are usually easily read

# Helps prevent full rebuild when switching between deskop and WASM due to rustflags
[profile.desktop]
inherits = "dev"
split-debuginfo = "packed"

[profile.desktop-release]
inherits = "release"
opt-level = 3
lto = true
strip = true

[profile.desktop-release-debug]
inherits = "release"
opt-level = 3
lto = true
debug = true
split-debuginfo = "packed"

# Prevents full rebuild just for profiling when enabling and disabling `bevy/trace_tracy`
[profile.profiling]
inherits = "desktop-release"
