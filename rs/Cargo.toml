[package]
name = "sond-has"
version = "0.1.0"
edition = "2021"
license = "EUPL-1.2"
default-run = "sond-has"

[workspace]
resolver = "2"
members = ["tools/*", "game-dylib"]

[features]
debugging = ["bevy-inspector-egui"]
vis_test = ["testing", "render"]
testing = ["colored"]
render = ["bevy/bevy_render", "bevy/bevy_winit", "bevy_rapier3d/debug-render", "bevy_rapier3d/async-collider"]
default = [
    "render",
]


[patch.crates-io]
#rapier3d = { version = "0.16", path = "../rapier/crates/rapier3d" }
#bevy_rapier3d = { version = "0.23.0", path = "../bevy_rapier/bevy_rapier3d" }
leafwing_abilities = { version = "0.5.0", path = "../leafwing_abilities" }

[workspace.dependencies.bevy]
version = "0.12.1"
default-features = false
features = [
#    "asset_processor", # only on desktop
    "animation",
    "bevy_asset",
#    "bevy_audio", # using kira
    "bevy_gilrs",
    "bevy_scene",
#    "bevy_winit", # not in CI
    "bevy_core_pipeline",
    "bevy_pbr",
    "bevy_gltf",
#    "bevy_render", # not in CI
    "bevy_sprite",
    "bevy_text",
#    "bevy_ui", # Will be making my own game UI
    "multi-threaded",
    "png",
    "hdr",
    "ktx2",
    "zstd",
    "vorbis",
    "x11",
#    "file_watcher", # only for development
    "bevy_gizmos",
    "android_shared_stdcxx",
    "tonemapping_luts",
#    "default_font", # For editor, but probably not in-game
    "webgl2", # Needed so it doesn't default to WebGPU
]

[workspace.dependencies]
# Mine
enum_components = { package = "sond-bevy-enum-components", path = "../sond-bevy-enum-components" }
particles = { package = "sond-bevy-particles", path = "../sond-bevy-particles" }
macros = { package = "sond-has-macros", path = "tools/macros" }

# Engine
bevy_dylib = "0.12.1"
bevy_rapier3d = { version = "0.23.0", default-features = false, features = ["dim3"] }
rapier3d = { version = "0.17.2", features = ["wasm-bindgen", "serde-serialize"] }
bevy_kira_audio = "0.18.0"
leafwing-input-manager = "0.11.1"
leafwing_abilities = "0.5.0"
bevy_quickmenu = "0.2.0"
bevy_common_assets = { version = "0.8.0", features = ["ron"] }

# Util
array-init = "2.1.0"
bevy_pkv = "0.9.0" # settings
crossbeam = "0.8.2"
fixedbitset = "0.4.2" # petgraph edge storage
futures-lite = "2.1.0" # especially for `yield_now()`
nanorand = { version = "0.7.0", default-features = false, features = ["std", "wyrand", "getrandom"] } # wasm is broken without std and getrandom
noise = "0.8.2"
num-traits = "0.2.17"
ordered-float = "4.2.0"
petgraph = { version = "0.6.4", default-features = false } # pathfinding
static_assertions = "1.1.0"
serde = "1"

# Debugging/Editor
bevy-inspector-egui = "0.21.0"

[dependencies]
# Mine
enum_components = { workspace = true }
particles = { workspace = true }
macros = { workspace = true }

# Engine
bevy = { workspace = true }
bevy_rapier3d = { workspace = true }
rapier3d = { workspace = true }
bevy_kira_audio = { workspace = true }
leafwing-input-manager = { workspace = true }
leafwing_abilities = { workspace = true }
#bevy_quickmenu = { workspace = true }
bevy_common_assets = { workspace = true }

# Util
array-init = { workspace = true }
bevy_pkv = { workspace = true }
fixedbitset = { workspace = true }
futures-lite = { workspace = true }
nanorand = { workspace = true }
noise = { workspace = true }
num-traits = { workspace = true }
ordered-float = { workspace = true }
petgraph = { workspace = true }
static_assertions = { workspace = true }
serde = { workspace = true }

# Debugging
bevy-inspector-egui = { workspace = true, optional = true }

# Testing
colored = { version = "2", optional = true }

[target.'cfg(not(target_arch="wasm32"))'.dependencies]
bevy_dylib = { workspace = true }

[profile.dev]
opt-level = 1

[profile.dev.package."*"]
opt-level = 3

[profile.release]
opt-level = "z"
lto = "thin"

[[test]]
name = "integration"
required-features = ["testing"]
harness = false

[lints.clippy]
needless_update = "allow" # `..default()` used a lot to allow quick adding/removing of fields
too_many_arguments = "allow" # Systems often need lots of arguments

# Helps prevent full rebuild when switching between deskop and WASM due to rustflags
[profile.desktop]
inherits = "dev"
[profile.desktop-release]
inherits = "release"
opt-level = 3
lto = true
